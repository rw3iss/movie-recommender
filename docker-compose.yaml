version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: movie-rec-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: movie_rec
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - movie-rec-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: movie-rec-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - movie-rec-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: movie-rec-api
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/movie_rec
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      TMDB_API_KEY: ${TMDB_API_KEY:-5b713bae92d64cab53739587d0afc801}
      TMDB_READ_ACCESS_TOKEN: ${TMDB_READ_ACCESS_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - movie-rec-network
    volumes:
      - ./api:/app
      - /app/node_modules
    command: npm run start

  # Frontend App
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: movie-rec-app
    ports:
      - "3000:80"
    environment:
      API_URL: http://api:3001
    depends_on:
      - api
    networks:
      - movie-rec-network
    volumes:
      - ./app:/app
      - /app/node_modules

  # pgAdmin (optional, for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: movie-rec-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@movierecommender.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - movie-rec-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  movie-rec-network:
    driver: bridge